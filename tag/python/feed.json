{
    "version": "https://jsonfeed.org/version/1",
    "title": "TCworker • All posts by \"python\" tag",
    "description": "time to work",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2022/10/30/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3python%E8%AF%AD%E8%A8%80[%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B]/",
            "url": "http://example.com/2022/10/30/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3python%E8%AF%AD%E8%A8%80[%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B]/",
            "title": "深入理解python语言[基本数据类型]",
            "date_published": "2022-10-30T08:33:19.000Z",
            "content_html": "<h1 id=\"深入理解python语言基本数据类型\"><a class=\"markdownIt-Anchor\" href=\"#深入理解python语言基本数据类型\">#</a> 深入理解 python 语言 [基本数据类型]</h1>\n<h2 id=\"1整数类型与数学中整数的概念一致\"><a class=\"markdownIt-Anchor\" href=\"#1整数类型与数学中整数的概念一致\">#</a> 1. 整数类型（与数学中整数的概念一致）</h2>\n<p>—  可正可负，<strong>没有取值范围的限制</strong></p>\n<p>—  pow (x,y) : 计算 x<sup>y</sup>, 不限制计算的大小【C 语言也有 pow ()】</p>\n<p><code>&gt;&gt;&gt;</code> pow(2,100)</p>\n<p>//python 整数提供<u>四种</u>进制表现形式：十进制，二进制，八进制，十六进制 //</p>\n<h2 id=\"2浮点数类型与数学中实数的概念一致\"><a class=\"markdownIt-Anchor\" href=\"#2浮点数类型与数学中实数的概念一致\">#</a> 2. 浮点数类型（与数学中实数的概念一致）</h2>\n<p>—  带有小数点及小数的数字</p>\n<p>—  浮点数取值范围和小数精度存在限制，但常规计算可以忽略</p>\n<p>—  取值范围数量级约 - 10<sup>308</sup> 至 10<sup>308</sup> (比 C 语言大多了), 精度数量级 10<sup>-16</sup></p>\n<p>—  <strong>浮点数间运算和比较用 <code>round()</code>  函数辅助</strong></p>\n<p>// 浮点数间的运算存在不确定尾数（我才知道这在很多编程语言中都存在 —__—）//</p>\n<p>例题：&gt;&gt;&gt; 0.1+0.2 == 0.3</p>\n<p>False (就是会这样)</p>\n<p>可以使用 round 函数</p>\n<p>—   round (x,d) : 对 x 四舍五入，d 是小数的解取位数（本题 d=1，四舍五入到 0.1，便可以成立）</p>\n<p><u><strong> <code>浮点数可以采用科学计数法表示</code> </strong></u></p>\n<p>—   使用字母 e 或者 E 作为幂的符号，以 10 为基数，格式如下：</p>\n<p><a>e<b>      表示 a*10<sup>b</sup></b></a></p>\n<p>—   例如：4.3e-3==0.0043       9.6E5==960000.0</p>\n<h2 id=\"3复数类型与数学中的复数概念一致\"><a class=\"markdownIt-Anchor\" href=\"#3复数类型与数学中的复数概念一致\">#</a> 3. 复数类型 (与数学中的复数概念一致)</h2>\n<p><strong><mark>众多编程语言中，只有 python 提供复数类型</mark></strong></p>\n<p>—  定义</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>j</mi><mo>=</mo><msqrt><mrow><mo stretchy=\"false\">(</mo><mo>−</mo><mn>1</mn><mo stretchy=\"false\">)</mo></mrow></msqrt></mrow><annotation encoding=\"application/x-tex\">j=\\sqrt{(-1)}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.24em;vertical-align:-0.25612499999999994em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.983875em;\"><span class=\"svg-align\" style=\"top:-3.2em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"mord\" style=\"padding-left:1em;\"><span class=\"mopen\">(</span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mclose\">)</span></span></span><span style=\"top:-2.9438750000000002em;\"><span class=\"pstrut\" style=\"height:3.2em;\"></span><span class=\"hide-tail\" style=\"min-width:1.02em;height:1.28em;\"><svg width=\"400em\" height=\"1.28em\" viewbox=\"0 0 400000 1296\" preserveaspectratio=\"xMinYMin slice\"><path d=\"M263,681c0.7,0,18,39.7,52,119\nc34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120\nc340,-704.7,510.7,-1060.3,512,-1067\nl0 -0\nc4.7,-7.3,11,-11,19,-11\nH40000v40H1012.3\ns-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232\nc-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1\ns-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26\nc-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z\nM1001 80h400000v40h-400000z\"/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.25612499999999994em;\"><span></span></span></span></span></span></span></span></span></span></p>\n<p>—   a+b==<strong>j</strong>== 被称为复数，其中，a 为实部，b 为虚部</p>\n<p>例题：</p>\n<p>z = 1.23e - 4 + 5.6e + 89<strong>j</strong></p>\n<p>—  实部是什么？   z.real 获得实部</p>\n<p>—  虚部是什么？   z.imag 获得虚部</p>\n<p>// 在常规的计算机编程中很少使用 //</p>\n<h2 id=\"4数值运算操作符\"><a class=\"markdownIt-Anchor\" href=\"#4数值运算操作符\">#</a> 4. 数值运算操作符</h2>\n<ul>\n<li>x+y   [加，x 与 y 的和]</li>\n<li>x-y    [减，x 与 y 的差]</li>\n<li>x*y   [乘，x 与 y 的积]</li>\n<li>x/y    [除，x 与 y 的商   10/3=3.3333333333333333335]</li>\n<li>x//y   [整数除，x 与 y 的整数商    10//3=3]</li>\n<li>+x      [x 本身]</li>\n<li>-y       [y 的负值]</li>\n<li>x% y   [余数，模运算  10%3 的结果是 1]</li>\n<li>x**y  [幂运算，x 的 y 次幂，x<sup>y</sup>|| 当 y 是小数时，开方运算  10**0.5 的结果是 10<sup>0.5</sup>]</li>\n</ul>\n<p><u><strong> <code>二元操作符对应的增强赋值操作符</code> </strong></u>(类似于 C 语言的赋值操作)</p>\n<p><img data-src=\"https://tcwokor.oss-cn-chengdu.aliyuncs.com/img/202210302100493.jpeg\" alt=\"网页捕获_30-10-2022_2102_www.icourse163.org\"></p>\n<p><strong><u> <code>不同数字类型间可以进行混合运算，生成结果“最宽”的类型</code> </u></strong></p>\n<p>— 三种类型存在一种逐渐 “扩展” 或 “变宽” 的关系：</p>\n<p>整数   -&gt;   浮点数   -&gt;   复数</p>\n<p>— 例如：123 + 4.0 =127.0 (整数 + 浮点数 = 浮点数)</p>\n<h2 id=\"5数值运算函数\"><a class=\"markdownIt-Anchor\" href=\"#5数值运算函数\">#</a> 5. 数值运算函数</h2>\n<p><u>python 内置一些函数</u>(不得不说，python 跟 C 比起来真的是强了十倍甚至是九倍)@_@-!</p>\n<p><img data-src=\"https://tcwokor.oss-cn-chengdu.aliyuncs.com/img/202210302114974.jpeg\" alt=\"网页捕获_30-10-2022_211426_www.icourse163.org\"></p>\n<p>=======================================================================================================================================================================================================================================================================================================================================================================================================</p>\n<p><img data-src=\"https://tcwokor.oss-cn-chengdu.aliyuncs.com/img/202210302119261.jpeg\" alt=\"网页捕获_30-10-2022_211846_www.icourse163.org\"></p>\n<p>=======================================================================================================================================================================================================================================================================================================================================================================================================</p>\n<p><img data-src=\"https://tcwokor.oss-cn-chengdu.aliyuncs.com/img/202210302121832.jpeg\" alt=\"网页捕获_30-10-2022_212114_www.icourse163.org\"></p>\n",
            "tags": [
                "python"
            ]
        }
    ]
}